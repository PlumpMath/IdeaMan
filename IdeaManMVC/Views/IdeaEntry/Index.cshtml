@using IdeaManMVC.Extensions
@using Microsoft.AspNet.Identity;
@model List<IdeaManMVC.Models.IdeaEntry>

<script>
    function updateValue(elemId) {
        $(elemId).html(parseInt($(elemId).html(), 10) + 1);
    }
</script>
<style>
    .list-group li { list-style: none; }

    .footer-padding {
        margin-bottom: -25px;
        padding-bottom: 25px;
    }
</style>
@{
    ViewBag.Title = "Ideas for Life";
    var counter = 1;
}
<div class="text-center">
    <h2 class="">@ViewBag.Title</h2>

    <p>
        @Html.ActionLink("Create New", "Create", null, new {@class = "btn btn-primary"})
    </p>

    <div class="btn-group">
        <h5>Filter by Category: &nbsp; &nbsp; </h5>
        @Html.ActionLink("All", "Index", "IdeaEntry", new { filterCat = "" }, new { @class = "btn btn-default" })
        @Html.ActionLink("Health", "Index", "IdeaEntry", new { filterCat = "Health" }, new { @class = "btn btn-success" })
        @Html.ActionLink("IT", "Index", "IdeaEntry", new { filterCat = "IT" }, new { @class = "btn btn-warning" })
        @Html.ActionLink("Entertainment", "Index", "IdeaEntry", new { filterCat = "Entertainment" }, new { @class = "btn btn-info" })
    </div>
</div>

<div class="text-right">
        <div>
            
        </div>
     </div>
<hr/>
<div class="container" id="main">

    @foreach (var item in Model)
    {
        @(counter == 1? Html.Raw("<div class='row'>") : Html.Raw(""))
        <div class="col-sm-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    @{
                        var lblColor = "";
                        switch (item.Category)
                        {
                            case "Health":
                                lblColor = "success";
                                break;
                            case "IT":
                                lblColor = "warning";
                                break;
                            case "Entertainment":
                                lblColor = "info";
                                break;
                        }
                        var isVoted = false;
                        if (item.Votes != null)
                        {
                            isVoted = item.Votes.Any(o => o.User != null && o.User.Id == User.Identity.GetUserId());
                        }
                    }
                    <span class="label label-@lblColor pull-right">@item.Category</span>  @Html.ActionLink("Read more", "Details", new {id = item.Id}, new {@class = ""})
                    <h4>@item.Title</h4>

                </div>
                <div class="panel-body">

                    <p style="margin-bottom: 10px">
                        @item.ShortDescription
                    </p>
                    
                    <hr/>

                    <div class="pull-right">
                        <p>
                            <span id=@($"vote{@item.Id}")>@item.Votes.Count</span>
                            Votes @Ajax.RawActionLink("Vote!", "DoVote", "IdeaEntry", new
                                  {
                                      id = @item.Id
                                  },
                                      new AjaxOptions
                                      {
                                          HttpMethod = "POST",
                                          OnSuccess = string.Format("updateValue(\"#vote{0}\"); $('#votebtn{0}').addClass('disabled'); ", @item.Id),
                                          OnFailure = ""
                                      },
                                      new
                                      {
                                          @class = "btn btn-default " + ((isVoted)?"hidden": ""),
                                          @id="votebtn"+@item.Id
                                      })
                        </p>

                    </div>
                    @item.Creator.FullName
                    <br/>
                    @item.DateCreated.Value.ToShortDateString()
                    
                </div>
            </div>
        </div>
        @(counter == 3 ? Html.Raw("</div>") : Html.Raw(""))
        counter++;  
        if (counter > 3)
        {
            counter = 1;
        }
    }
</div><!--/main-->